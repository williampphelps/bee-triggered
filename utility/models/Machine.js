import mongoose from "mongoose";

const MachineSchema = new mongoose.Schema({
  name: String,
  location: String,
  status: String,
  last_seen: Date,
  first_seen: Date,
  company: mongoose.ObjectId,
  user: mongoose.ObjectId,
  mac_prefix: String,
  max_suffix: String,
  config: {
    "device-node_id": String,
    "ip-ignorelist": [],
    "git-enabled": Boolean,
    "git-port": Number,
    "ftp-enabled": Boolean,
    "ftp-port": Number,
    "ftp-banner": String,
    "http-banner": String,
    "http-enabled": Boolean,
    "http-port": Number,
    "http-skin": String,
    "http-skin-list": [
      {
        desc: String,
        name: String,
      },
    ],
    "httpproxy-enabled": Boolean,
    "httpproxy-port": Number,
    "httpproxy-skin": String,
    "httpproxy-skin-list": [
      {
        desc: String,
        name: String,
      },
    ],
    logger: {
      class: String,
      kwargs: {
        formatters: {
          plain: {
            format: String,
          },
        },
        handlers: {},
      },
    },
    "portscan-enabled": Boolean,
    "portscan-ingore_localhost": Boolean,
    "portscan-logfile": String,
    "portscan-synrate": Number,
    "portscan-nmaposrate": Number,
    "portscan-lorate": Number,
    "smb-auditfile": String,
    "smb-enabled": Boolean,
    "smb-workgroup": String,
    "smb-sharename": String,
    "smb-configfile": String,
    "mysql-enabled": Boolean,
    "mysql-port": Number,
    "mysql-banner": String,
    "ssh-enabled": Boolean,
    "ssh-port": Number,
    "ssh-version": String,
    "redis-enabled": Boolean,
    "redis-port": Number,
    "rdp-enabled": Boolean,
    "rdp-port": Number,
    "sip-enabled": Boolean,
    "sip-port": Number,
    "snmp-enabled": Boolean,
    "snmp-port": Number,
    "ntp-enabled": Boolean,
    "ntp-port": Number,
    "tftp-enabled": Boolean,
    "tftp-port": Number,
    "tcpbanner-maxnum": Number,
    "tcpbanner-enabled": Boolean,
    "tcpbanner_1-enabled": Boolean,
    "tcpbanner_1-port": Number,
    "tcpbanner_1-datareceivedbanner": String,
    "tcpbanner_1-initbanner": String,
    "tcpbanner_1-alertstring-enabled": Boolean,
    "tcpbanner_1-alertstring": String,
    "tcpbanner_1-keep-alive-enabled": Boolean,
    "tcpbanner_1-keep_alive_secret": String,
    "tcpbanner_1-keep_alive_probes": Number,
    "tcpbanner_1-keep_alive_interval": Number,
    "tcpbanner_1-keep_alive_idle": Number,
    "telnet-enabled": Boolean,
    "telnet-port": Number,
    "telnet-banner": String,
    "telnet-honeycreds": [
      {
        username: String,
        password: String,
      },
    ],
    "mssql-enabled": Boolean,
    "mssql-version": String,
    "mssql-port": Number,
    "vnc-enabled": Boolean,
    "vnc-port": Number,
  },
});

module.exports =
  mongoose.models.Machine || mongoose.model("Machine", MachineSchema);
